name: meetinghelper
description: null

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev
version: 8.2.7+30

environment:
  sdk: ">=3.0.0 <4.0.0"

dependencies:
  android_alarm_manager_plus: ^3.0.1
  async: ^2.8.2
  cached_network_image: ^3.2.0
  churchdata_core:
    git:
      url: https://github.com/Andrew-Bekhiet/churchdata_core
      ref: master
  cloud_firestore: ^4.0.2
  cloud_functions: ^4.0.1
  collection: ^1.15.0
  connectivity_plus: ^4.0.1
  convert: ^3.0.2
  copy_with_extension: ^5.0.2
  cupertino_icons: ^1.0.4
  dart_jts: ^0.2.1+1
  dart_postgis: ^0.3.0+2
  device_info_plus: ^9.0.2
  expandable: ^5.0.1
  file_picker: ^5.2.1
  firebase_app_check: ^0.1.1
  firebase_auth: ^4.0.2
  firebase_auth_platform_interface: ^6.2.1
  firebase_core: ^2.1.0
  firebase_database: ^10.0.2
  firebase_dynamic_links: ^5.0.1
  firebase_in_app_messaging: ^0.7.0+1
  firebase_messaging: ^14.0.1
  firebase_storage: ^11.0.1
  flutter:
    sdk: flutter
  flutter_colorpicker: ^1.0.3
  flutter_contacts: ^1.1.5
  flutter_local_notifications: ^15.1.0+1
  flutter_localizations:
    sdk: flutter
  flutter_secure_storage: ^8.0.0
  get_it: ^7.2.0
  group_list_view:
    git:
      url: https://github.com/Andrew-Bekhiet/flutter_group_list_view
      ref: 0ebdffaebc8ccdd8d92072edfe2f1db567a7db9e
  google_maps_flutter: ^2.1.1
  google_sign_in: ^6.1.4
  hive_flutter: ^1.1.0
  image_cropper: ^5.0.0
  image_picker: ^1.0.1
  intl: ^0.18.0
  local_auth: ^2.0.0
  location: ^5.0.1
  open_file:
    git:
      url: https://github.com/Andrew-Bekhiet/open_file
      ref: 4e00e919e2187bfbbddc0b6c4d32daa01969f58e
  package_info_plus: ^4.0.2
  path_provider: ^2.0.8
  percent_indicator: ^4.0.0
  permission_handler: ^10.0.0
  photo_view: ^0.14.0
  pointycastle: ^3.5.1
  provider: ^6.0.2
  random_color: ^1.0.6-nullsafety
  rxdart: ^0.27.3
  sentry_flutter: ^7.9.0
  share_plus: ^7.0.2
  spreadsheet_decoder: ^2.0.2
  supabase: ^1.0.0
  syncfusion_flutter_charts: ^22.1.39
  timeago: ^3.2.2
  tinycolor2: ^3.0.1
  tuple: ^2.0.0
  tutorial_coach_mark: ^1.2.1
  url_launcher: ^6.0.18
  version: ^3.0.2

dev_dependencies:
  flutter_test:
    sdk: flutter

  churchdata_core_mocks:
    git:
      url: https://github.com/Andrew-Bekhiet/churchdata_core_mocks
      ref: master
  mockito: ^5.1.0
  build_runner: ^2.1.8
  copy_with_extension_gen: ^5.0.0
  device_info_plus_platform_interface: ^7.0.0
  local_auth_platform_interface: ^1.0.3
  flutter_secure_storage_platform_interface: ^1.0.0
  mock_data: ^2.0.0
  visibility_detector: ^0.4.0+2

flutter_icons:
  image_path: "Logo.png"
  android: true
  ios: true

flutter_native_splash:
  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove
  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#ffffff"
  # background_image: "assets/background.png"
  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.
  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file.
  image: ./Logo.png

  # The color_dark, background_image_dark, and image_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  color_dark: "#000000"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png
  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  android: false
  #ios: true
  #web: false
  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  web_image_mode: contain
  # To hide the notification bar, use the fullscreen parameter.  Has no affect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  #fullscreen: true
  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# The following section is specific to Flutter.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.
  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages
  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: MaterialIconsR
      fonts:
        - asset: fonts/MaterialIcons-Regular.ttf
  #      - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
