import { auth, messaging } from "firebase-admin";
// import { region } from "firebase-functions";
import { pubsub } from "firebase-functions";
import { getFCMTokensForUser } from "./common";
import { firebase_dynamic_links_prefix } from "./environment";

// const pubsub = region("europe-west1").pubsub;

export const sendNewYearMessage = pubsub
  .schedule("0 0 1 1 *")
  .timeZone("Africa/Cairo")
  .onRun(async () => {
    let usersToSend: string[] = [];

    usersToSend = await Promise.all(
      ((await auth().listUsers()).users as any).map(
        async (user: any) => await getFCMTokensForUser(user.uid)
      )
    );
    usersToSend = usersToSend
      .reduce<string[]>((accumulator, value) => accumulator.concat(value), [])
      .filter((v) => v !== null && v !== undefined);

    await messaging().sendEachForMulticast({
      tokens: usersToSend,
      android: {
        priority: "high",
        ttl: 7 * 24 * 60 * 60,
        restrictedPackageName: "com.AndroidQuartz.etraf",
      },
      notification: {
        title: "Happy New Year! üéâüéáüéÜ",
        body: "ÿ£ÿ≥ÿ±ÿ© ÿßŸÑÿ®ÿ±ŸÜÿßŸÖÿ¨ ÿ™ÿ™ŸÖŸÜŸâ ŸÑŸÉŸÖ ÿ≥ŸÜÿ© ÿ¨ÿØŸäÿØÿ© ÿ≥ÿπŸäÿØÿ© üéá",
      },
      data: {
        click_action: "FLUTTER_NOTIFICATION_CLICK",
        type: "Message",
        title: "Happy New Year! üéâüéáüéÜ",
        content:
          "ŸÉŸèŸÑŸëŸè ŸÖŸéÿß ÿ£Ÿèÿ±ŸêŸäÿØŸèŸáŸè ŸäŸéÿß ÿ±Ÿéÿ®ŸëŸê ÿå ŸáŸèŸàŸé ÿ£ŸéŸÜŸí ÿ£Ÿéÿ®ŸíÿØŸéÿ£Ÿé ŸÖŸéÿπŸéŸÉŸé ŸÖŸêŸÜŸí ÿ¨ŸéÿØŸêŸäÿØŸç ÿ£Ÿèÿ±ŸêŸäÿØŸè ÿ£ŸéŸÜŸí ÿ•ŸÜŸíÿ≥ŸêŸäŸë ŸÖŸéÿß ŸáŸèŸàŸé ŸàŸéÿ±Ÿéÿßÿ° ÿå ŸàŸéÿßŸÖŸíÿ™ŸéÿØŸë ÿ•ŸÑŸéŸäŸë ŸÇŸèÿØŸëŸéÿßŸÖ ( ŸÅŸéŸäŸèŸÑŸéÿ®ŸëŸêŸä €±€≥ : €≥) . ÿ£Ÿèÿ±ŸêŸäÿØŸè ÿ£ŸéŸÜŸí ÿ£Ÿéÿ®ŸíÿØŸéÿ£Ÿé ŸÖŸéÿπŸéŸÉ ÿ®ŸêÿØŸéÿßŸäŸéÿ© ÿ¨ŸéÿØŸêŸäÿØŸéÿ© ÿå ŸÉŸéŸÖŸéÿß ÿ®ŸéÿØŸéÿ£Ÿéÿ™ ÿ®ŸêŸÜŸêÿπŸíŸÖŸéÿ™ŸêŸÉ ŸÖŸéÿπŸé ŸÜŸèŸàÿ≠Ÿç ÿå ÿ®ŸéÿπŸíÿØŸé ÿ£ŸéŸÜŸí ÿ£Ÿéÿ≤ŸéŸÑŸíÿ™ ÿßŸÑŸíŸÖŸéÿßÿ∂ŸêŸä ÿßŸÑŸíŸÇŸéÿØŸêŸäŸÖ ŸÉŸèŸÑŸëŸèŸá ÿå ŸàŸéÿ∫Ÿèÿ≥ŸêŸÑŸéÿ™ ÿßŸÑŸíÿ£Ÿéÿ±Ÿíÿ∂Ÿê ŸÖŸêŸÜŸí ÿ£ÿØŸÜÿßÿ≥Ÿáÿß . . . ŸáŸéÿ∞Ÿéÿß ÿßŸÑŸíŸÖŸéÿßÿ∂ŸêŸäŸé ÿßŸÑŸíŸÇŸéÿØŸêŸäŸÖ ŸÉŸèŸÑŸëŸèŸá ÿå ÿ£ŸéŸÜŸéÿß ŸÖŸèÿ™ŸéŸÜÿßÿ≤ŸêŸÑ ÿπŸéŸÜŸíŸá . ŸäŸéŸÉŸíŸÅŸêŸä ÿßŸÑŸíŸäŸéŸàŸíŸÖ ÿ¥Ÿéÿ±ŸëŸêŸá (ŸÖÿ™€å 6 : 34) . ÿ£ŸéŸÖŸëŸéÿß ÿßŸÑŸíÿπŸéÿßŸÖŸëŸè ÿßŸÑŸíÿ¨ŸéÿØŸêŸäÿØ ÿå ŸÅŸéÿ£Ÿèÿ±ŸêŸäÿØŸè ÿ£ŸéŸÜŸí ÿ£Ÿéÿ®ŸíÿØŸéÿßŸá ÿ®ŸêÿßŸÑÿ±ŸëŸéÿ¨Ÿéÿßÿ° . ( ÿßŸÑÿ®ÿßÿ®ÿß ÿ¥ŸÜŸàÿØÿ© ÿßŸÑÿ´ÿßŸÑÿ´)",
        attachement:
          firebase_dynamic_links_prefix +
          "/viewImage?url=https%3A%2F%2Flh3.googleusercontent.com%2Fpw%2FAM-JKLXY_vHy6n6dUGhmkryqL839BxvmOGykw_SI9libFSvjuWwTMYtgSWmK-fKUcp7S3j3ye3khtMgJQF4FIAabfErO8N8WsS5YPjHfOU3tZFoogoXGYlpwZwCN13L4SvKJiltRTh_ajrKhSv3nu5HcfdAK%3Dw1032-h689-no%3Fauthuser%3D0",
        time: String(Date.now()),
        sentFrom: "",
      },
    });
    return "OK";
  });

export const sendMerryChristmasMessage = pubsub
  .schedule("0 0 7 1 *")
  .timeZone("Africa/Cairo")
  .onRun(async () => {
    let usersToSend: string[] = [];

    usersToSend = await Promise.all(
      ((await auth().listUsers()).users as any).map(
        async (user: any) => await getFCMTokensForUser(user.uid)
      )
    );
    usersToSend = usersToSend
      .reduce<string[]>((accumulator, value) => accumulator.concat(value), [])
      .filter((v) => v !== null && v !== undefined);

    await messaging().sendEachForMulticast({
      tokens: usersToSend,
      android: {
        priority: "high",
        ttl: 7 * 24 * 60 * 60,
        restrictedPackageName: "com.AndroidQuartz.etraf",
      },
      notification: {
        title: "Merry Christmas! üéÖüéÑüéâ",
        body: "ÿ£ÿ≥ÿ±ÿ© ÿßŸÑÿ®ÿ±ŸÜÿßŸÖÿ¨ ÿ™ÿ™ŸÖŸÜŸâ ŸÑŸÉŸÖ ÿπŸäÿØ ŸÖŸäŸÑÿßÿØ ÿ≥ÿπŸäÿØ üéÖüéÑüéâ",
      },
      data: {
        click_action: "FLUTTER_NOTIFICATION_CLICK",
        type: "Message",
        title: "Merry Christmas! üéÖüéÑüéâ",
        content:
          "ÿ®ŸäŸÜŸÖÿß ŸÉÿßŸÜ ŸäŸèÿ±Ÿâ ÿ∑ŸÅŸÑ ÿ±ÿ∂Ÿäÿπ ŸÖŸÇŸÖÿ∑ÿßŸã ŸÅŸâ ÿ£ÿ≠ÿ∂ÿßŸÜ ÿßŸÑÿπÿ∞ÿ±ÿßÿ°" +
          " ÿßŸÑÿ™Ÿâ ŸàŸÑÿØÿ™Ÿáÿõ ŸÉÿßŸÜ ŸäŸÖŸÑÿ£ ÿßŸÑÿÆŸÑŸäŸÇÿ© ŸÉŸÑŸáÿß ŸÉÿ•ŸÑŸá ŸàŸÉÿ¨ŸÑŸäÿ≥ ŸÖÿπ ÿßŸÑÿ¢ÿ® ÿßŸÑÿ∞Ÿâ ŸàŸÑÿØŸáÿõ" +
          "\n ŸÑÿ£ŸÜ ÿßŸÑŸÑÿßŸáŸàÿ™ ÿ∫Ÿäÿ± ÿÆÿßÿ∂ÿπ ŸÑŸÑŸÉŸÖ ŸàÿßŸÑŸÇŸäÿßÿ≥ ŸàŸÑÿß ÿ™ÿ≠ÿØŸá ÿ£Ÿâ ÿ≠ÿØŸàÿØÿõ" +
          " ŸÅŸáŸà ÿµÿßŸÜÿπ ÿßŸÑÿØŸáŸàÿ±ÿõ ÿßŸÑŸàÿßÿ≠ÿØ" +
          " ŸÖÿπ ÿßŸÑÿ¢ÿ® ŸÅŸâ ÿßŸÑÿßÿ≤ŸÑŸäÿ© Ÿà ÿÆÿßŸÑŸÇ ÿßŸÑÿ¨ŸÖŸäÿπ \nÿßŸÑŸÇÿØŸäÿ≥ ŸÉŸäÿ±ŸÑÿ≥ ÿßŸÑŸÉÿ®Ÿäÿ±",
        attachement:
          firebase_dynamic_links_prefix +
          "/viewImage?url=https%3A%2F%2Flh3.googleusercontent.com%2Fpw%2FAM-JKLVdRHoLrkCZmk83mp69ynZtVd7ZnpI29Y3k9djvoEi93NSI5olJTr14gH0YUcnE7A4AVK_CkHKk13jNJLDXUOH1m_vIP6UEaJWB3ztwdRnA6-hagTwbTTR2lClv9O094YYg4OBxPxrZnYDea-fBAo4L%3Dw1032-h688-no%3Fauthuser%3D0",
        time: String(Date.now()),
        sentFrom: "",
      },
    });
    return "OK";
  });

export const sendHappyRiseMessage = pubsub
  .schedule("0 0 24 4 *")
  .timeZone("Africa/Cairo")
  .onRun(async () => {
    let usersToSend: string[] = [];

    usersToSend = await Promise.all(
      ((await auth().listUsers()).users as any).map(
        async (user: any) => await getFCMTokensForUser(user.uid)
      )
    );
    usersToSend = usersToSend
      .reduce<string[]>((accumulator, value) => accumulator.concat(value), [])
      .filter((v) => v !== null && v !== undefined);

    await messaging().sendEachForMulticast({
      tokens: usersToSend,
      android: {
        priority: "high",
        ttl: 7 * 24 * 60 * 60,
        restrictedPackageName: "com.AndroidQuartz.etraf",
      },
      notification: {
        title: "‚≤¨‚≤£‚≤ì‚≤•‚≤ß‚≤ü‚≤• ‚≤Å‚≤õ‚≤â‚≤•‚≤ß‚≤è... ‚≤Ä‚≤ó‚≤è‚≤ë‚≤±‚≤• ‚≤Å‚≤õ‚≤â‚≤•‚≤ß‚≤è",
        body: "ÿßŸÑŸÖÿ≥Ÿäÿ≠ ŸÇÿßŸÖ... ÿ®ÿßŸÑÿ≠ŸÇŸäŸÇÿ© ŸÇÿßŸÖ üéâ",
      },
      data: {
        click_action: "FLUTTER_NOTIFICATION_CLICK",
        type: "Message",
        title: "‚≤¨‚≤£‚≤ì‚≤•‚≤ß‚≤ü‚≤• ‚≤Å‚≤õ‚≤â‚≤•‚≤ß‚≤è... ‚≤Ä‚≤ó‚≤è‚≤ë‚≤±‚≤• ‚≤Å‚≤õ‚≤â‚≤•‚≤ß‚≤è üéâ",
        content: "",
        attachement:
          firebase_dynamic_links_prefix +
          "/viewImage?url=https%3A%2F%2Flh3.googleusercontent.com%2Fpw%2FAM-JKLVdRHoLrkCZmk83mp69ynZtVd7ZnpI29Y3k9djvoEi93NSI5olJTr14gH0YUcnE7A4AVK_CkHKk13jNJLDXUOH1m_vIP6UEaJWB3ztwdRnA6-hagTwbTTR2lClv9O094YYg4OBxPxrZnYDea-fBAo4L%3Dw1032-h688-no%3Fauthuser%3D0",
        time: String(Date.now()),
        sentFrom: "",
      },
    });
    return "OK";
  });
