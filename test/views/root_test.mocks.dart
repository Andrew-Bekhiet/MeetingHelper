// Mocks generated by Mockito 5.4.2 from annotations
// in meetinghelper/test/views/root_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:io' as _i12;
import 'dart:typed_data' as _i11;

import 'package:firebase_auth/firebase_auth.dart' as _i10;
import 'package:firebase_core/firebase_core.dart' as _i4;
import 'package:firebase_database/firebase_database.dart' as _i9;
import 'package:firebase_storage/firebase_storage.dart' as _i5;
import 'package:firebase_storage_platform_interface/firebase_storage_platform_interface.dart'
    as _i6;
import 'package:meetinghelper/models.dart' as _i3;
import 'package:meetinghelper/repositories.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rxdart/rxdart.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBehaviorSubject_0<T> extends _i1.SmartFake
    implements _i2.BehaviorSubject<T> {
  _FakeBehaviorSubject_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValueStream_1<T> extends _i1.SmartFake
    implements _i2.ValueStream<T> {
  _FakeValueStream_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMHPermissionsSet_2 extends _i1.SmartFake
    implements _i3.MHPermissionsSet {
  _FakeMHPermissionsSet_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_3 extends _i1.SmartFake implements _i3.User {
  _FakeUser_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseApp_4 extends _i1.SmartFake implements _i4.FirebaseApp {
  _FakeFirebaseApp_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_5 extends _i1.SmartFake implements Duration {
  _FakeDuration_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReference_6 extends _i1.SmartFake implements _i5.Reference {
  _FakeReference_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseStorage_7 extends _i1.SmartFake
    implements _i5.FirebaseStorage {
  _FakeFirebaseStorage_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFullMetadata_8 extends _i1.SmartFake implements _i6.FullMetadata {
  _FakeFullMetadata_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListResult_9 extends _i1.SmartFake implements _i5.ListResult {
  _FakeListResult_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUploadTask_10 extends _i1.SmartFake implements _i5.UploadTask {
  _FakeUploadTask_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDownloadTask_11 extends _i1.SmartFake implements _i5.DownloadTask {
  _FakeDownloadTask_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MHAuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMHAuthRepository extends _i1.Mock implements _i7.MHAuthRepository {
  MockMHAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BehaviorSubject<_i3.User?> get userSubject => (super.noSuchMethod(
        Invocation.getter(#userSubject),
        returnValue: _FakeBehaviorSubject_0<_i3.User?>(
          this,
          Invocation.getter(#userSubject),
        ),
      ) as _i2.BehaviorSubject<_i3.User?>);
  @override
  _i2.BehaviorSubject<_i3.Person?> get userDataSubject => (super.noSuchMethod(
        Invocation.getter(#userDataSubject),
        returnValue: _FakeBehaviorSubject_0<_i3.Person?>(
          this,
          Invocation.getter(#userDataSubject),
        ),
      ) as _i2.BehaviorSubject<_i3.Person?>);
  @override
  set userTokenListener(
          _i8.StreamSubscription<_i9.DatabaseEvent>? _userTokenListener) =>
      super.noSuchMethod(
        Invocation.setter(
          #userTokenListener,
          _userTokenListener,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set connectionListener(
          _i8.StreamSubscription<_i9.DatabaseEvent>? _connectionListener) =>
      super.noSuchMethod(
        Invocation.setter(
          #connectionListener,
          _connectionListener,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set personListener(_i8.StreamSubscription<_i3.Person>? _personListener) =>
      super.noSuchMethod(
        Invocation.setter(
          #personListener,
          _personListener,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set authListener(_i8.StreamSubscription<_i10.User?>? _authListener) =>
      super.noSuchMethod(
        Invocation.setter(
          #authListener,
          _authListener,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.ValueStream<_i3.User?> get userStream => (super.noSuchMethod(
        Invocation.getter(#userStream),
        returnValue: _FakeValueStream_1<_i3.User?>(
          this,
          Invocation.getter(#userStream),
        ),
      ) as _i2.ValueStream<_i3.User?>);
  @override
  bool get isSignedIn => (super.noSuchMethod(
        Invocation.getter(#isSignedIn),
        returnValue: false,
      ) as bool);
  @override
  _i2.ValueStream<_i3.Person?> get userDataStream => (super.noSuchMethod(
        Invocation.getter(#userDataStream),
        returnValue: _FakeValueStream_1<_i3.Person?>(
          this,
          Invocation.getter(#userDataStream),
        ),
      ) as _i2.ValueStream<_i3.Person?>);
  @override
  bool connectionChanged(_i9.DatabaseEvent? snapshot) => (super.noSuchMethod(
        Invocation.method(
          #connectionChanged,
          [snapshot],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i3.MHPermissionsSet permissionsFromIdToken(
          Map<String, dynamic>? idTokenClaims) =>
      (super.noSuchMethod(
        Invocation.method(
          #permissionsFromIdToken,
          [idTokenClaims],
        ),
        returnValue: _FakeMHPermissionsSet_2(
          this,
          Invocation.method(
            #permissionsFromIdToken,
            [idTokenClaims],
          ),
        ),
      ) as _i3.MHPermissionsSet);
  @override
  _i8.Future<_i3.User> refreshFromIdToken(
    Map<String, dynamic>? idTokenClaims, {
    _i10.User? firebaseUser,
    String? uid,
    String? name,
    String? email,
    String? phone,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshFromIdToken,
          [idTokenClaims],
          {
            #firebaseUser: firebaseUser,
            #uid: uid,
            #name: name,
            #email: email,
            #phone: phone,
          },
        ),
        returnValue: _i8.Future<_i3.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #refreshFromIdToken,
            [idTokenClaims],
            {
              #firebaseUser: firebaseUser,
              #uid: uid,
              #name: name,
              #email: email,
              #phone: phone,
            },
          ),
        )),
      ) as _i8.Future<_i3.User>);
  @override
  _i8.Future<void> refreshSupabaseToken([String? supabaseToken]) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshSupabaseToken,
          [supabaseToken],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  void initListeners() => super.noSuchMethod(
        Invocation.method(
          #initListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onUserChanged(_i10.User? user) => super.noSuchMethod(
        Invocation.method(
          #onUserChanged,
          [user],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<void> refreshIdToken(
    _i10.User? firebaseUser, [
    bool? force = false,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshIdToken,
          [
            firebaseUser,
            force,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  void refreshFromDoc(_i3.Person? userData) => super.noSuchMethod(
        Invocation.method(
          #refreshFromDoc,
          [userData],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void scheduleOnDisconnect() => super.noSuchMethod(
        Invocation.method(
          #scheduleOnDisconnect,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<void> recordActive() => (super.noSuchMethod(
        Invocation.method(
          #recordActive,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> recordLastSeen() => (super.noSuchMethod(
        Invocation.method(
          #recordLastSeen,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [FirebaseStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseStorage extends _i1.Mock implements _i5.FirebaseStorage {
  MockFirebaseStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_4(
          this,
          Invocation.getter(#app),
        ),
      ) as _i4.FirebaseApp);
  @override
  set app(_i4.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get bucket => (super.noSuchMethod(
        Invocation.getter(#bucket),
        returnValue: '',
      ) as String);
  @override
  set bucket(String? _bucket) => super.noSuchMethod(
        Invocation.setter(
          #bucket,
          _bucket,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Duration get maxOperationRetryTime => (super.noSuchMethod(
        Invocation.getter(#maxOperationRetryTime),
        returnValue: _FakeDuration_5(
          this,
          Invocation.getter(#maxOperationRetryTime),
        ),
      ) as Duration);
  @override
  Duration get maxUploadRetryTime => (super.noSuchMethod(
        Invocation.getter(#maxUploadRetryTime),
        returnValue: _FakeDuration_5(
          this,
          Invocation.getter(#maxUploadRetryTime),
        ),
      ) as Duration);
  @override
  Duration get maxDownloadRetryTime => (super.noSuchMethod(
        Invocation.getter(#maxDownloadRetryTime),
        returnValue: _FakeDuration_5(
          this,
          Invocation.getter(#maxDownloadRetryTime),
        ),
      ) as Duration);
  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);
  @override
  _i5.Reference ref([String? path]) => (super.noSuchMethod(
        Invocation.method(
          #ref,
          [path],
        ),
        returnValue: _FakeReference_6(
          this,
          Invocation.method(
            #ref,
            [path],
          ),
        ),
      ) as _i5.Reference);
  @override
  _i5.Reference refFromURL(String? url) => (super.noSuchMethod(
        Invocation.method(
          #refFromURL,
          [url],
        ),
        returnValue: _FakeReference_6(
          this,
          Invocation.method(
            #refFromURL,
            [url],
          ),
        ),
      ) as _i5.Reference);
  @override
  void setMaxOperationRetryTime(Duration? time) => super.noSuchMethod(
        Invocation.method(
          #setMaxOperationRetryTime,
          [time],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setMaxUploadRetryTime(Duration? time) => super.noSuchMethod(
        Invocation.method(
          #setMaxUploadRetryTime,
          [time],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setMaxDownloadRetryTime(Duration? time) => super.noSuchMethod(
        Invocation.method(
          #setMaxDownloadRetryTime,
          [time],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<void> useEmulator({
    required String? host,
    required int? port,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #useEmulator,
          [],
          {
            #host: host,
            #port: port,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> useStorageEmulator(
    String? host,
    int? port,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #useStorageEmulator,
          [
            host,
            port,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [Reference].
///
/// See the documentation for Mockito's code generation for more information.
class MockReference extends _i1.Mock implements _i5.Reference {
  MockReference() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.FirebaseStorage get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeFirebaseStorage_7(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i5.FirebaseStorage);
  @override
  String get bucket => (super.noSuchMethod(
        Invocation.getter(#bucket),
        returnValue: '',
      ) as String);
  @override
  String get fullPath => (super.noSuchMethod(
        Invocation.getter(#fullPath),
        returnValue: '',
      ) as String);
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: '',
      ) as String);
  @override
  _i5.Reference get root => (super.noSuchMethod(
        Invocation.getter(#root),
        returnValue: _FakeReference_6(
          this,
          Invocation.getter(#root),
        ),
      ) as _i5.Reference);
  @override
  _i5.Reference child(String? path) => (super.noSuchMethod(
        Invocation.method(
          #child,
          [path],
        ),
        returnValue: _FakeReference_6(
          this,
          Invocation.method(
            #child,
            [path],
          ),
        ),
      ) as _i5.Reference);
  @override
  _i8.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<String> getDownloadURL() => (super.noSuchMethod(
        Invocation.method(
          #getDownloadURL,
          [],
        ),
        returnValue: _i8.Future<String>.value(''),
      ) as _i8.Future<String>);
  @override
  _i8.Future<_i6.FullMetadata> getMetadata() => (super.noSuchMethod(
        Invocation.method(
          #getMetadata,
          [],
        ),
        returnValue: _i8.Future<_i6.FullMetadata>.value(_FakeFullMetadata_8(
          this,
          Invocation.method(
            #getMetadata,
            [],
          ),
        )),
      ) as _i8.Future<_i6.FullMetadata>);
  @override
  _i8.Future<_i5.ListResult> list([_i6.ListOptions? options]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [options],
        ),
        returnValue: _i8.Future<_i5.ListResult>.value(_FakeListResult_9(
          this,
          Invocation.method(
            #list,
            [options],
          ),
        )),
      ) as _i8.Future<_i5.ListResult>);
  @override
  _i8.Future<_i5.ListResult> listAll() => (super.noSuchMethod(
        Invocation.method(
          #listAll,
          [],
        ),
        returnValue: _i8.Future<_i5.ListResult>.value(_FakeListResult_9(
          this,
          Invocation.method(
            #listAll,
            [],
          ),
        )),
      ) as _i8.Future<_i5.ListResult>);
  @override
  _i8.Future<_i11.Uint8List?> getData([int? maxSize = 10485760]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getData,
          [maxSize],
        ),
        returnValue: _i8.Future<_i11.Uint8List?>.value(),
      ) as _i8.Future<_i11.Uint8List?>);
  @override
  _i5.UploadTask putData(
    _i11.Uint8List? data, [
    _i6.SettableMetadata? metadata,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #putData,
          [
            data,
            metadata,
          ],
        ),
        returnValue: _FakeUploadTask_10(
          this,
          Invocation.method(
            #putData,
            [
              data,
              metadata,
            ],
          ),
        ),
      ) as _i5.UploadTask);
  @override
  _i5.UploadTask putBlob(
    dynamic blob, [
    _i6.SettableMetadata? metadata,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBlob,
          [
            blob,
            metadata,
          ],
        ),
        returnValue: _FakeUploadTask_10(
          this,
          Invocation.method(
            #putBlob,
            [
              blob,
              metadata,
            ],
          ),
        ),
      ) as _i5.UploadTask);
  @override
  _i5.UploadTask putFile(
    _i12.File? file, [
    _i6.SettableMetadata? metadata,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #putFile,
          [
            file,
            metadata,
          ],
        ),
        returnValue: _FakeUploadTask_10(
          this,
          Invocation.method(
            #putFile,
            [
              file,
              metadata,
            ],
          ),
        ),
      ) as _i5.UploadTask);
  @override
  _i5.UploadTask putString(
    String? data, {
    _i6.PutStringFormat? format = _i6.PutStringFormat.raw,
    _i6.SettableMetadata? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putString,
          [data],
          {
            #format: format,
            #metadata: metadata,
          },
        ),
        returnValue: _FakeUploadTask_10(
          this,
          Invocation.method(
            #putString,
            [data],
            {
              #format: format,
              #metadata: metadata,
            },
          ),
        ),
      ) as _i5.UploadTask);
  @override
  _i8.Future<_i6.FullMetadata> updateMetadata(_i6.SettableMetadata? metadata) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMetadata,
          [metadata],
        ),
        returnValue: _i8.Future<_i6.FullMetadata>.value(_FakeFullMetadata_8(
          this,
          Invocation.method(
            #updateMetadata,
            [metadata],
          ),
        )),
      ) as _i8.Future<_i6.FullMetadata>);
  @override
  _i5.DownloadTask writeToFile(_i12.File? file) => (super.noSuchMethod(
        Invocation.method(
          #writeToFile,
          [file],
        ),
        returnValue: _FakeDownloadTask_11(
          this,
          Invocation.method(
            #writeToFile,
            [file],
          ),
        ),
      ) as _i5.DownloadTask);
}
